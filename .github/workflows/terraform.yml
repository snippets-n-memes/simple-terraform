name: 'Terraform'

on: [pull_request_target]

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  plan:
    strategy: 
      matrix: 
        env: [prime, beta]
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: aks/aks-simple

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Terraform Plan
      run: |
        terraform init -backend-config=key=${{ matrix.env  }}.tfvars
        terraform plan -no-color -input=false -var-file=env/${{ matrix.env  }}.tfvars -out tfplan

    - name: Prep Plan for Comment
      run: |
        terraform show -no-color tfplan > tfplan.txt
        sed -i -E 's/^([[:space:]]+)([-+])/\2\1/g' tfplan.txt
        PLAN=$(cat tfplan.txt)
        echo "PLAN<<EOF" >> $GITHUB_ENV
        echo "$PLAN" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV  
        
    - name: Create PR comment
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.number }}
        body: |
          ## ${{ matrix.env  }} Plan
          ```diff
          ${{ env.PLAN }}
          ```
        reactions: 'rocket'   
    
  apply:
    strategy:
      matrix: 
        env: [prime, beta]
    environment:
      name: ${{ matrix.env }}
    needs: plan
    if: github.ref == 'refs/heads/trunk'
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Terraform Apply
      run: |
        terraform init
        terraform apply -var-file=env/${{ matrix.env }}.tfvars -input=false -auto-approve
        
